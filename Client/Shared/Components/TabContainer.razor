@using Microsoft.AspNetCore.Components

<div class="tab-container">
    <div class="tab-header">
        @foreach (var tab in Tabs)
        {
            <button class="tab-button @(tab.IsActive ? "active" : "")" @onclick="@(() => SelectTab(tab))">
                @tab.Title
            </button>
        }
    </div>

    <div class="tab-content">
        @if (ActiveTabContent != null)
        {
            @ActiveTabContent
        }

        <div class="tab-footer">
            <button class="boton-guardar-tab" @onclick="GuardarCambios">Guardar</button>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public List<TabItem> Tabs { get; set; }

    [Parameter]
    public Dictionary<string, RenderFragment> TabContents { get; set; }

    private string ActiveTabKey => Tabs.FirstOrDefault(t => t.IsActive)?.Route;

    private RenderFragment ActiveTabContent =>
        ActiveTabKey != null && TabContents?.ContainsKey(ActiveTabKey) == true
            ? TabContents[ActiveTabKey]
            : null;

    private void SelectTab(TabItem tab)
    {
        foreach (var t in Tabs)
        {
            t.IsActive = false;
        }

        tab.IsActive = true;
        StateHasChanged();
    }

    private void GuardarCambios()
    {
        Console.WriteLine("Guardar clickeado");
        // Aquí puedes poner tu lógica real
    }

    public class TabItem
    {
        public string Title { get; set; }
        public string Route { get; set; }
        public bool IsActive { get; set; } = false;
    }
}
