@using Microsoft.AspNetCore.Components
<div class="tabla-editable">
    <div class="tabla-header">
        <h5 title="@Title">@Title</h5>
        <button class="btn btn-success" @onclick="OnAgregarClicked">Agregar</button>
    </div>
    <div class="tabla-scroll">
        @if (Rows?.Count > 0)
        {
            <table class="tabla-contenido">
                <thead>
                    <tr>
                        @foreach (var header in ColumnHeaders)
                        {
                            <th>@header</th>
                        }
                        <th class="acciones-column">Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Rows.Count; i++)
                    {
                        int index = i; // Captura la variable para el closure
                        <tr>
                            @for (int j = 0; j < Rows[i].Count; j++)
                            {
                                <td>@Rows[i][j]</td>
                            }
                            <td class="acciones-column">
                                <button class="btn btn-sm btn-primary me-1"
                                        @onclick="() => OnEditarClicked.InvokeAsync(index)">
                                    Editar
                                </button>
                                <button class="btn btn-sm btn-danger"
                                        @onclick="() => OnEliminarClicked.InvokeAsync(index)">
                                    Eliminar
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <div class="tabla-vacia">
                No hay datos disponibles
            </div>
        }
    </div>
</div>

@code {
    [Parameter] public string Title { get; set; } = "Tabla Editable";
    [Parameter] public List<string> ColumnHeaders { get; set; } = new();
    [Parameter] public List<List<string>> Rows { get; set; } = new();
    [Parameter] public EventCallback OnAgregarClicked { get; set; }
    [Parameter] public EventCallback<int> OnEditarClicked { get; set; }
    [Parameter] public EventCallback<int> OnEliminarClicked { get; set; }
}